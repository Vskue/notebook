# Guide: Functions and Conditional Statements
##1. Define Functions and Returning Values
In Pyhton, th functions such as 'print(), type(), str().
A function is a body of reusable code for performing specific processes of tasks.

# The print() function can print text.
print("blue, red, green")

# The type() function returns an object's data type
number = 15
type(number)

# Know how to define our own funtions.
To define a function, we use the keyword word 'def' at the start of the function block.

# Define a function
def greeting(name):
print("Welcome, "+ name + "!")
print("You are part of the team!")
greeting("Victoria")
[Output] Welcome, Victoria! You are part of the team!

# Define a function to calculate the area of a triangle.
def area_triangle(base, height):
return base * hight / 2
# use the function to assign new variables and perform calculations.
area_a = area_triangle(5,4)
area_b = area_triangle(7,3)
total_area = area_a + area_b
total_area
[Output] 20.5

# Define a function that convers hours, minutes, and seconds to total seconds.
def get_seconds(hours, minutes, seconds):
total_seconds = 3600*hours + 60*minutes + seconds
return total_seconds
# use the function to return a result.
get_seconds(16,42,20)
[Output]60320

#2. Write Clean Code











# Jupyter Notebook Documentation

Welcome to the **Jupyter Notebook** documentation site. **Jupyter Notebook**
is a simplified notebook authoring application, and is a part of [Project
Jupyter](https://docs.jupyter.org/en/latest/), a large umbrella project
centered around the goal of providing tools (and [standards](https://docs.jupyter.org/en/latest/#sub-project-documentation))
for interactive computing with [computational notebooks](https://docs.jupyter.org/en/latest/#what-is-a-notebook).

A [computational notebook](https://docs.jupyter.org/en/latest/#what-is-a-notebook)
is a shareable document that combines computer
code, plain language descriptions, data, rich visualizations like 3D models,
charts, graphs and figures, and interactive controls. A notebook, along with
an editor like **Jupyter Notebook**, provides a fast interactive environment for
prototyping and explaining code, exploring and visualizing data, and sharing
ideas with others.

**Jupyter Notebook** is a sibling to other notebook authoring applications under
the Project Jupyter umbrella, like [JupyterLab](https://jupyterlab.readthedocs.io/en/stable/)
and [Jupyter Desktop](https://github.com/jupyterlab/jupyterlab-desktop).
Jupyter Notebook offers a lightweight, simplified experience compared to JupyterLab.

Read more about how to use **Jupyter Notebook** on this site, in the [User
Documentation](notebook.md).

```{image} ./_static/images/notebook-running-code.png

```

- [Installation](https://jupyter.readthedocs.io/en/latest/install.html)
- [Starting the Notebook](https://jupyter.readthedocs.io/en/latest/running.html)

```{toctree}
:maxdepth: 2

user-documentation
configuration
migrate_to_notebook7
contributor
changelog
```
